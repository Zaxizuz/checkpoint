import "string"

#pragma link("mega65hyper.ld")

const char* RASTER = 0xd012;
const char* VIC_MEMORY = 0xd018;
const char* SCREEN = 0x0400;
const char* BGCOL = 0xd021;
const char* COLS = 0xd800;
const char BLACK = 0;
const char WHITE = 1;

char[] MESSAGE = "checkpoint2.2 by lin0385";

void main(){

  *VIC_MEMORY = 0x14;
  memset(SCREEN, ' ', 40*25);
  memset(COLS, WHITE, 40*25);
  
  char* sc = SCREEN+40;
  char* msg = MESSAGE;

  while(*msg){
    *sc++ = *msg++;
  }

  while(true){
    if(*RASTER==52||*RASTER==66){
      *BGCOL=WHITE;
    }else{
      *BGCOL=BLACK;
    }
  }
}

void syscall1(){
  *(SCREEN+79) = '>';
}

void syscall2(){
  *(SCREEN+78) = '<';
}

void syscall0(){}
void syscall3(){}
void syscall4(){}
void syscall5(){}
void syscall6(){}
void syscall7(){}
void syscall8(){}
void syscall9(){}
void syscallA(){}
void syscallB(){}
void syscallC(){}
void syscallD(){}
void syscallE(){}
void syscallF(){}
void syscall10(){}
void syscall13(){}
void syscall14(){}
void syscall15(){}
void syscall16(){}
void syscall17(){}
void syscall18(){}
void syscall19(){}
void syscall1A(){}
void syscall1B(){}
void syscall1C(){}
void syscall1D(){}
void syscall1E(){}
void syscall1F(){}
void syscall20(){}
void syscall21(){}
void syscall22(){}
void syscall23(){}
void syscall24(){}
void syscall25(){}
void syscall26(){}
void syscall27(){}
void syscall28(){}
void syscall29(){}
void syscall2A(){}
void syscall2B(){}
void syscall2C(){}
void syscall2D(){}
void syscall2E(){}
void syscall2F(){}
void syscall30(){}
void syscall31(){}
void syscall32(){}
void syscall33(){}
void syscall34(){}
void syscall35(){}
void syscall36(){}
void syscall37(){}
void syscall38(){}
void syscall39(){}
void syscall3A(){}
void syscall3B(){}
void syscall3C(){}
void syscall3D(){}
void syscall3E(){}
void syscall3F(){}
void reset(){}
void pagfault(){}
void restorkey(){}
void alttabkey(){}
void vf011rd(){}
void vf011wr(){}
void reserved(){}
void cpukil(){}

#pragma data_seg(Syscall) 

struct SysCall{
  char xjmp;
  void()* syscall;
  char xnop;
};   

const char JMP = 0x4c;
const char NOP = 0xea;

export struct SysCall[] SYSCALLS = {
   {JMP, &syscall1, NOP},
   {JMP, &syscall2, NOP},
   {JMP, &syscall0, NOP},
   {JMP, &syscall3, NOP},
   {JMP, &syscall4, NOP},
   {JMP, &syscall5, NOP},
   {JMP, &syscall6, NOP},
   {JMP, &syscall7, NOP},
   {JMP, &syscall8, NOP},
   {JMP, &syscall9, NOP},
   {JMP, &syscallA, NOP},
   {JMP, &syscallB, NOP},
   {JMP, &syscallC, NOP},
   {JMP, &syscallD, NOP},
   {JMP, &syscallE, NOP},
   {JMP, &syscallF, NOP},
   {JMP, &syscall10, NOP},
   {JMP, &syscall13, NOP},
   {JMP, &syscall14, NOP},
   {JMP, &syscall15, NOP},
   {JMP, &syscall16, NOP},
   {JMP, &syscall17, NOP},
   {JMP, &syscall18, NOP},
   {JMP, &syscall19, NOP},
   {JMP, &syscall1A, NOP},
   {JMP, &syscall1B, NOP},
   {JMP, &syscall1C, NOP},
   {JMP, &syscall1D, NOP},
   {JMP, &syscall1E, NOP},
   {JMP, &syscall1F, NOP},
   {JMP, &syscall20, NOP},
   {JMP, &syscall21, NOP},
   {JMP, &syscall22, NOP},
   {JMP, &syscall23, NOP},
   {JMP, &syscall24, NOP},
   {JMP, &syscall25, NOP},
   {JMP, &syscall26, NOP},
   {JMP, &syscall27, NOP},
   {JMP, &syscall28, NOP},
   {JMP, &syscall29, NOP},
   {JMP, &syscall2A, NOP},
   {JMP, &syscall2B, NOP},
   {JMP, &syscall2C, NOP},
   {JMP, &syscall2D, NOP},
   {JMP, &syscall2E, NOP},
   {JMP, &syscall2F, NOP},
   {JMP, &syscall30, NOP},
   {JMP, &syscall31, NOP},
   {JMP, &syscall32, NOP},
   {JMP, &syscall33, NOP},
   {JMP, &syscall34, NOP},
   {JMP, &syscall35, NOP},
   {JMP, &syscall36, NOP},
   {JMP, &syscall37, NOP},
   {JMP, &syscall38, NOP},
   {JMP, &syscall39, NOP},
   {JMP, &syscall3A, NOP},
   {JMP, &syscall3B, NOP},
   {JMP, &syscall3C, NOP},
   {JMP, &syscall3D, NOP},
   {JMP, &syscall3E, NOP},
   {JMP, &syscall3F, NOP}
};
   
export align(0x100) struct SysCall[] TRAPS = {
   {JMP, &main, NOP},
   {JMP, &reset, NOP},
   {JMP, &pagfault, NOP},
   {JMP, &restorkey, NOP},
   {JMP, &alttabkey, NOP},
   {JMP, &vf011rd, NOP},
   {JMP, &vf011wr, NOP},
   {JMP, &reserved, NOP},
   {JMP, &cpukil, NOP}

};